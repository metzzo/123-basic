// --------------------------------- //
// Project: Elefantastic
// Start: Saturday, August 04, 2012
// IDE Version: 10.283

CONSTANT OBJECT_IS_LINE = 1
CONSTANT OBJECT_IS_ROUNDLINE = 2
CONSTANT OBJECT_IS_AIRSTREAM = 3
CONSTANT OBJECT_IS_CHAINSAW = 4
CONSTANT OBJECT_IS_BLACKHOLE = 5

CONSTANT LINE_INFO_ENDPOSVEC = 0
CONSTANT LINE_INFO_VISIBLE = 0

TYPE TCollisionObject
	Typ%
	PosVec AS TVec
	NormalVec AS TVec
	DirVec AS TVec
	CollisionRect AS TRect
	Thickness% = 1

	Info[]
	InfoVec[] AS TVec

	FUNCTION Update:
		SELECT self.Typ
			CASE OBJECT_IS_LINE

			CASE OBJECT_IS_ROUNDLINE

			CASE OBJECT_IS_AIRSTREAM

			CASE OBJECT_IS_CHAINSAW

			CASE OBJECT_IS_BLACKHOLE

			DEFAULT
				DEBUG "Unknown Collision Object "+self.Typ+"\n"
		ENDSELECT
	ENDFUNCTION

	FUNCTION Render:
		//self.CollisionRect.Draw()
		SELECT self.Typ
			CASE OBJECT_IS_LINE
				IF self.Info[LINE_INFO_VISIBLE]
					STARTPOLY LineImg,2
					LOCAL a = self.DirVec.Angle()+90
					LOCAL s = SIN(a), c = COS(a)
					LOCAL col = RGB(255,255,255)
					POLYVECTOR self.PosVec.X+c*self.Thickness, self.PosVec.Y+s*self.Thickness,0,0,col
					POLYVECTOR self.PosVec.X-c*self.Thickness, self.PosVec.Y-s*self.Thickness,1,0,col
					POLYVECTOR self.InfoVec[LINE_INFO_ENDPOSVEC].X+c*self.Thickness, self.InfoVec[LINE_INFO_ENDPOSVEC].Y+s*self.Thickness,0,1,col
					POLYVECTOR self.InfoVec[LINE_INFO_ENDPOSVEC].X-c*self.Thickness, self.InfoVec[LINE_INFO_ENDPOSVEC].Y-s*self.Thickness,1,1,col
					ENDPOLY
					
					//DRAWLINE self.PosVec.X + CurrentMap.Scroll.X, self.PosVec.Y + CurrentMap.Scroll.Y, self.InfoVec[LINE_INFO_ENDPOSVEC].X + CurrentMap.Scroll.X, self.InfoVec[LINE_INFO_ENDPOSVEC].Y + CurrentMap.Scroll.Y, RGB(255,0,0)
				ENDIF
			CASE OBJECT_IS_ROUNDLINE

			CASE OBJECT_IS_AIRSTREAM

			CASE OBJECT_IS_CHAINSAW

			CASE OBJECT_IS_BLACKHOLE

			DEFAULT
				DEBUG "Unknown Collision Object "+self.Typ+"\n"
		ENDSELECT
	ENDFUNCTION

	FUNCTION DoCollision: Obj AS TFallingObject, Pen, V AS TVec
		SELECT self.Typ
			CASE OBJECT_IS_LINE
				LOCAL T AS TVec
				T = self.NormalVec
				T.MulVec(Pen)
				Obj.PosVec.AddVec(T)
				T = V
				T.Normalize()
				LOCAL S AS TVec
				S = V
				S.NormalVec()
				Obj.SpeedVec.Bounce(S, T)
			CASE OBJECT_IS_ROUNDLINE

			CASE OBJECT_IS_AIRSTREAM

			CASE OBJECT_IS_CHAINSAW

			CASE OBJECT_IS_BLACKHOLE

			DEFAULT
				DEBUG "Unknown Collision Object "+self.Typ+"\n"
		ENDSELECT

	ENDFUNCTION

	FUNCTION GetPen: Obj AS TFallingObject, BYREF Pen, V AS TVec
		FindIntersection(Obj, V)

		Pen = (Obj.Radius + self.Thickness) - V.Length()
	ENDFUNCTION

	FUNCTION FindIntersection: Obj AS TFallingObject, ResVec AS TVec
		LOCAL V3 AS TVec
		V3 = Obj.PosVec
		V3.SubVec(self.PosVec)

		LOCAL NormalizedMyVec AS TVec
		NormalizedMyVec = self.DirVec
		NormalizedMyVec.Normalize()

		IF V3.DotProd(NormalizedMyVec) < 0
			ResVec.SetVec(V3)
		ELSE
			LOCAL MyPos AS TVec
			MyPos = self.PosVec
			MyPos.AddVec(self.DirVec)

			LOCAL V4 AS TVec
			V4 = Obj.PosVec
			V4.SubVec(MyPos)

			IF V4.DotProd(NormalizedMyVec) >  0
				ResVec.SetVec(V4)
			ELSE
				V3.Project(self.NormalVec)
				ResVec.SetVec(V3)
			ENDIF
		ENDIF
	ENDFUNCTION


	FUNCTION CreateLine: StartVec AS TVec, EndVec AS TVec, Visible% = FALSE
		self.Typ = OBJECT_IS_LINE
		self.PosVec = StartVec
		DIM self.InfoVec[1]
		self.InfoVec[LINE_INFO_ENDPOSVEC] = EndVec
		DIM self.Info[1]
		self.Info[LINE_INFO_VISIBLE] = Visible

		self.UpdateVectors()
		DIMPUSH CollisionObjects[], self
	ENDFUNCTION

	FUNCTION UpdateVectors:
		SELECT self.Typ
			CASE OBJECT_IS_LINE
				self.DirVec.SetVec(self.InfoVec[LINE_INFO_ENDPOSVEC])
				self.DirVec.SubVec(self.PosVec)


				self.CollisionRect.SetPos(self.PosVec)
				LOCAL P AS TVec
				P = self.InfoVec[LINE_INFO_ENDPOSVEC]
				P.SubVec(self.PosVec)
				self.CollisionRect.SetSize(P.X, P.Y)
			CASE OBJECT_IS_ROUNDLINE

			CASE OBJECT_IS_AIRSTREAM

			CASE OBJECT_IS_CHAINSAW

			CASE OBJECT_IS_BLACKHOLE

			DEFAULT
				DEBUG "Unknown Collision Object "+self.Typ+"\n"
		ENDSELECT

		self.NormalVec = self.DirVec
		self.NormalVec.NormalVec()
		self.NormalVec.Normalize()

	ENDFUNCTION
ENDTYPE
